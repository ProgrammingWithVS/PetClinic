pipeline {
    agent any
    tools {
        maven 'maven'
        jdk 'jdk'
    }
    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/ProgrammingWithVS/PetClinic.git'
            }
        }
        stage('Code Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Docker Image Build and Push') {
            steps {
                withCredentials([string(credentialsId: 'dockersecret', variable: 'dockertoken')]) {
                    sh 'docker login -u sucheeth -p $dockertoken'
                    sh 'docker build -t sucheeth/petclinic:latest .'
                    sh 'docker push sucheeth/petclinic:latest'
                }
            }
        }
        stage('Deploy on k8s') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'K8s', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://172.31.47.197:6443') {
                    sh 'kubectl apply -f deploymentservice.yml'
                    sleep 60
                }
            }
        }
         stage('Verify Deployment') {
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'K8s', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://172.31.47.197:6443') {
                    sh 'kubectl get pods -n webapps'
                    sh 'kubectl get svc'
                }
            }
        }
    }
}
